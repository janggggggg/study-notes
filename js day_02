function handleMath(symbol){
    if(buffer === '0'){
        return;
    }

    const intBuffer = parseInt(buffer);

    if(runningTotal === 0){
        runningTotal = intBuffer;   //첫 번째 연산이므로, runningTotal에 현재 숫자(intBuffer)를 저장
    }else{
        flushOperation(intBuffer);  //runningTotal이 0이 아니라면, 즉 이미 숫자를 넣은 상태라면,
    }
    previousOperator = symbol; // 이전연산자를 심볼로 남겨둠.
    buffer = '0';   //연산자가 입력된 후, 새로운 숫자를 입력하기 위해 buffer를 '0'으로 초기화
}

function flushOperation(intBuffer){
    if(previousOperator === '+'){
        runningTotal += intBuffer;
    }else if(previousOperator === '−'){
        runningTotal -= intBuffer;
    }else if(previousOperator === '×'){
        runningTotal *= intBuffer;
    }else if(previousOperator === '÷'){
        runningTotal /= intBuffer;
    }
}

function handleNumber(numberString){  // 계산하기전엔 문자열로 적혀야 되니깐.
    if(buffer === "0"){
        buffer = numberString;  // buffer가 '0'이라면, 새로운 문자열 숫자로 덮어씌움
    }else{
        buffer += numberString; // buffer에 새로운 숫자를 이어붙임
    }
}

function init(){
    document.querySelector('.calc-buttons').addEventListener('click', function(event){
        buttonClick(event.target.innerText);
    })
}

init();     // 초기화 시점 차이: let runningTotal = 0;, let buffer = "0"; 등의 변수
// 는 페이지가 로드되면 즉시 필요합니다. 즉, 이러한 값들은
//  페이지 로드 시 바로 설정되어야 하므로,
//  이벤트 리스너를 설정하는 init() 함수 바깥에서 선언하는 것이 자연스럽습니다.

// 반면, 이벤트 리스너 설정은 사용자가 버튼을 클릭할 때 발생하는 동작이므로,
//  초기화 시점에서 별도로 분리하여 init() 함수로 처리하는 것이 적합합니다.


// 계산기 코드를 이해는 다 했지만 혼자만들어보는 과정이 필요할듯싶다.
