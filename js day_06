// 달력을 만드는데 필요한 주석만 남겨두고 어떤 코드들을 적어 나가야할지 연습을 하는중
// 전체적인 코드를 한번씩 이해하고 그 다음에 만들어 나가려하니 생각보다 괜찮은거같다 이 연습법
// 어째서 이런 구조여야하는지부터 조금씩 알아가지는게 신기했다.

// 페이지 로드 시 generateCalendar 함수 호출
window.onload = function(){
  generateCalendar();
}

// 달력을 생성하는 함수
function generateCalendar(){
  const calendar = document.getElementById('calendar');
  // 현재 날짜, 월, 년을 얻기 위한 새로운 Date 객체 생성
  const currentDate = new Date();
  const year = new Date(currentDate.getFullYear);
  const month = new Date(currentDate.getDate);
    // 해당 월의 첫 번째 날과 마지막 날 계산
  const firstDayOfMonth = new Date(year, month, 1);
  const lastDayOfMonth = new Date(year, month+1, 0);
    // 해당 월 첫날의 요일 계산
    const firstDayOfWeek = firstDayOfMonth.getDay;
    const totalDays = lastDayOfMonth.getDay;
      // 첫 번째 날 전에 빈 div 요소를 추가
    for(let i = 0; i < firstDayOfWeek; i++){
        let blankDay = document.createElement('div');
        calendar.appendChild(blankDay);
    }
      // 해당 월의 각 날짜에 대해 div 요소를 추가 
    for(let day = 1; day <= totalDays; day++){
      let daySquare = document.createElement('div');
      daySquare.className = "calendar-day";
      daySquare.textContent = day;
      daySquare.id = `day-${day}`;
      calendar.appendChild(daySquare);
    }
}

// 할 일 추가 모달을 보여주는 함수
function showAddTaskModal(){
  document.getElementById('addTaskModal').style.display = 'block';
}

// 할 일 추가 모달을 닫는 함수
function closeAddTaskModal(){
  document.getElementById('addTaskModal').style.display = 'none';
}

// 할 일을 삭제하는 함수
function deleteTask(taskElement){
  // 삭제 확인 대화상자
  if(confirm("할 일을 삭제하시겠습니까?")){
    // 사용자가 확인하면, 해당 할 일 요소를 부모에서 제거
    taskElement.parentNode.removeChild(taskElement);
  }
}

// 할 일을 수정하는 함수
function editTask(taskElement){
  // 현재 할 일 설명을 기본값으로 수정할 수 있는 팝업 표시
  const newTaskDesc = prompt("수정하시겠습니까?",taskElement.textContent);
    // 사용자가 새로운 설명을 입력했는지, 그리고 그 내용이 비어 있지 않은지 확인
    if( newTaskDesc !== null & newTaskDesc.trim() !== "" ){
      // 할 일 요소의 텍스트를 새로운 설명으로 업데이트
      taskElement.textContent = newTaskDesc;
    }
}


// 할 일을 추가하는 함수
function addTask(){
  // 입력 필드에서 날짜와 설명을 가져오기
  const taskDate = new Date(document.getElementById('task-date').value);
  const taskDesc = document.getElementById('task-desc').value.trim();
    // 날짜와 설명 유효성 검사
    if( taskDesc && !isNaN(taskDate.getDate()) ){
      // 달력의 날짜들 가져오기
      const day = document.getElementById('calendar');
    }
}

      // 달력 날짜들을 반복

          // 날짜가 할 일 날짜와 일치하는지 확인

              // 할 일 요소 생성
  

              // 마우스 오른쪽 클릭 시 할 일 삭제


              // 마우스 왼쪽 클릭 시 할 일 수정


              // 해당 날짜에 할 일 요소 추가

      // 유효하지 않은 날짜나 설명에 대한 경고
